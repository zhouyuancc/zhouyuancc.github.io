        /// <summary>
        /// 提交数据
        /// </summary>
        /// <param name="posturl"></param>
        /// <param name="postData"></param>
        /// <returns></returns>
        public string GetPage(string posturl, string postData)
        {
            Stream outstream = null;
            Stream instream = null;
            StreamReader sr = null;
            HttpWebResponse response = null;
            HttpWebRequest request = null;
            Encoding encoding = Encoding.UTF8;
            byte[] data = encoding.GetBytes(postData);
            // 准备请求...
            try
            {
                // 设置参数
                request = WebRequest.Create(posturl) as HttpWebRequest;
                CookieContainer cookieContainer = new CookieContainer();
                request.CookieContainer = cookieContainer;
                request.AllowAutoRedirect = true;
                request.Method = "POST";
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = data.Length;
                outstream = request.GetRequestStream();
                outstream.Write(data, 0, data.Length);
                outstream.Close();
                //发送请求并获取相应回应数据
                response = request.GetResponse() as HttpWebResponse;
                //直到request.GetResponse()程序才开始向目标网页发送Post请求
                instream = response.GetResponseStream();
                sr = new StreamReader(instream, encoding);
                //返回结果网页（html）代码
                string content = sr.ReadToEnd();
                string err = string.Empty;
                Response.Write(content);
                return content;
            }
            catch (Exception ex)
            {
                string err = ex.Message;
                return string.Empty;
            }
        }
        /// <summary>
        /// 获取微信数据
        /// </summary>
        /// <param name="posturl"></param>
        /// <returns></returns>
        public string GetPage(string posturl)
        {
            Stream instream = null;
            StreamReader sr = null;
            HttpWebResponse response = null;
            HttpWebRequest request = null;
            Encoding encoding = Encoding.UTF8;
            // 准备请求...
            try
            {
                // 设置参数
                request = WebRequest.Create(posturl) as HttpWebRequest;
                CookieContainer cookieContainer = new CookieContainer();
                request.CookieContainer = cookieContainer;
                request.AllowAutoRedirect = true;
                request.Method = "GET";
                request.ContentType = "application/x-www-form-urlencoded";
                //发送请求并获取相应回应数据
                response = request.GetResponse() as HttpWebResponse;
                //直到request.GetResponse()程序才开始向目标网页发送Post请求
                instream = response.GetResponseStream();
                sr = new StreamReader(instream, encoding);
                //返回结果网页（html）代码
                string content = sr.ReadToEnd();
                string err = string.Empty;
                ////Response.Write(content);
                return content;
            }
            catch (Exception ex)
            {
                string err = ex.Message;
                return string.Empty;
            }
        }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

string url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid="+ APPID +"&secret=" + SECRET;

string strJson = GetPage(url);
GetClientToken c1 = ScriptDeserializeClientToken(strJson);
access_token = c1.access_token;
Session["access_token"] = access_token;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        public class GetClientToken
        {
            public string access_token { get; set; }
            public string expires_in { get; set; }
        }
        public GetClientToken ScriptDeserializeClientToken(string strJson)
        {
            JavaScriptSerializer js = new JavaScriptSerializer();
            return js.Deserialize<GetClientToken>(strJson);
        }
        public GetToken ScriptDeserializeToken(string strJson)
        {
            JavaScriptSerializer js = new JavaScriptSerializer();
            return js.Deserialize<GetToken>(strJson);
        }

--------------------------------------------------------------------------

要解析一个json的二维数组，比如"[[1,2,3,4],[11,22,33,44],...[11,21,31,41]]"上述数组内的第二层数组的元素长度固定，使用C#如何解析？用DataContrast应该怎么写？ 

int[][] arr = new int[2][]; 
arr[0] = new int[] { 1, 2, 3, 4 }; 
arr[1] = new int[] { 11, 22, 33, 44 }; 

System.Web.Script.Serialization.JavaScriptSerializer jsSeria = new System.Web.Script.Serialization.JavaScriptSerializer(); 

string s = jsSeria.Serialize(arr);  //序列化           

int[][] arr2 = jsSeria.Deserialize(s, typeof(int[][])) as int[][];//反序列化  

