{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red29\green133\blue25;\red110\green32\blue13;\red186\green0\blue17;
\red32\green136\blue22;\red180\green0\blue98;\red77\green0\blue158;\red46\green13\blue110;\red32\green60\blue63;
\red100\green56\blue32;\red0\green11\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20020\viewh12500\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  jihuoTests.m\cf0 \
\cf2 //  jihuoTests\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by ZhouYuan on 17/4/9.\cf0 \
\cf2 //  Copyright \'a9 2017
\f1 \'c4\'ea
\f0  ZY. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #import \cf4 <XCTest/XCTest.h>\cf3 \
#import \cf4 "NSString+Utils.h"\cf3 \
\cf0 \
\cf5 /**\
 
\f1 \'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'b2\'e2\'b5\'c4\'ca\'b1\'ba\'f2
\f0 \
 1.
\f1 \'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'b2\'bb\'d3\'c3\'c5\'dc\'d5\'fb\'b8\'f6\'b3\'cc\'d0\'f2
\f0 ,
\f1 \'d6\'b1\'bd\'d3\'b5\'e3\'bb\'f7\'b7\'bd\'b7\'a8\'d7\'f3\'b1\'df\'b5\'c4\'b0\'b4\'c5\'a5
\f0 \
 2.
\f1 \'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'b0\'d1\'b3\'cc\'d0\'f2\'d3\'eb\'b2\'e2\'ca\'d4\'b5\'c4\'b9\'fd\'b3\'cc\'c7\'f8\'b7\'d6\'bf\'aa
\f0 ,
\f1 \'b2\'bb\'d3\'c3\'d4\'d9
\f0 NSLog
\f1 \'c1\'cb
\f0 \
 3.
\f1 \'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'b8\'fc\'bf\'ec
\f0 ,Command+R
\f1 \'ca\'c7\'bc\'af\'c8\'ba\'b2\'e2\'ca\'d4
\f0 ,
\f1 \'d6\'b1\'bd\'d3\'d4\'da\'b3\'cc\'d0\'f2\'c0\'ef\'b2\'e2\'cc\'ab\'b1\'bf\'d6\'d8\'c1\'cb
\f0 ,
\f1 \'d2\'aa\'b5\'c8\'c4\'a3\'c4\'e2\'c6\'f7\'c5\'dc\'c6\'f0\'c0\'b4
\f0 \
 4.
\f1 \'b2\'e2\'ca\'d4\'b7\'bd\'b7\'a8
\f0 test
\f1 \'bf\'aa\'cd\'b7
\f0 \
 \
 
\f1 \'d3\'c5\'b5\'e3
\f0 :\
 1.
\f1 \'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb\'d3\'eb\'d2\'b5\'ce\'f1\'b4\'fa\'c2\'eb\'ca\'c7\'b6\'c0\'c1\'a2\'b5\'c4
\f0 ,
\f1 \'b4\'f2\'b0\'fc\'b2\'bb\'d3\'b0\'cf\'ec
\f0 ,
\f1 \'b2\'bb\'d3\'c3\'c9\'be\'b2\'e2\'ca\'d4\'b7\'bd\'b7\'a8
\f0 \
 2.
\f1 \'d6\'b1\'b9\'db\'b5\'c4\'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'d5\'fd\'c8\'b7
\f0 ,
\f1 \'b2\'bb\'d0\'e8\'d2\'aa\'bf\'b4\'b4\'f2\'d3\'a1\'bd\'e1\'b9\'fb
\f0 ,
\f1 \'bf\'b4\'d1\'d5\'c9\'ab\'be\'cd\'d0\'d0\'c1\'cb
\f0 \
 3.
\f1 \'b2\'bb\'d0\'e8\'d2\'aa\'c6\'f4\'b6\'af\'b3\'cc\'d0\'f2
\f0 \
 \
 
\f1 \'b4\'b4\'bd\'a8\'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'ce\'c4\'bc\'fe
\f0 :1
\f1 \'b8\'f6\'c0\'e0\'b6\'d4\'d3\'a6
\f0 1
\f1 \'b8\'f6\'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'ce\'c4\'bc\'fe
\f0 \
 1.xxTests
\f1 \'d1\'a1\'d6\'d0\'ba\'f3
\f0 ,Command+N -> Unit Test Case Class -> Next\
 2.
\f1 \'b4\'b4\'bd\'a8
\f0  
\f1 \'bc\'cc\'b3\'d0\'d7\'d4
\f0 XCTsetCase
\f1 \'b5\'c4
\f0 ZYxxTest\
 */\cf0 \
\
\cf6 @interface\cf0  jihuoTests : \cf7 XCTestCase\cf0 \
\
\cf6 @end\cf0 \
\
\cf6 @implementation\cf0  jihuoTests\
\
\cf5 /**\
 @BeforeClass\
 
\f1 \'bd\'f8\'c0\'b4\'ca\'b1\'d6\'b4\'d0\'d0
\f0 \
 */\cf0 \
- (\cf6 void\cf0 )setUp \{\
    [\cf6 super\cf0  \cf8 setUp\cf0 ];\
    \cf2 // Put setup code here. This method is called before the invocation of each test method in the class.\cf0 \
\}\
\
\cf5 /**\
 @AfterClass\
 
\f1 \'bd\'e1\'ca\'f8\'ca\'b1\'d6\'b4\'d0\'d0
\f0 \
 */\cf0 \
- (\cf6 void\cf0 )tearDown \{\
    \cf2 // Put teardown code here. This method is called after the invocation of each test method in the class.\cf0 \
    [\cf6 super\cf0  \cf8 tearDown\cf0 ];\
\}\
\
- (\cf6 void\cf0 )testExample \{\
    \cf2 // This is an example of a functional test case.\cf0 \
    \cf2 // Use XCTAssert and related functions to verify your tests produce the correct results.\cf0 \
\}\
\
- (\cf6 void\cf0 )testgetURLParameters\
\{\
    \cf7 NSString\cf0  *str = \cf4 @"http://detail.php?coupon_id=354408"\cf0 ;\
    \cf7 NSMutableDictionary\cf0  *dic = [str \cf9 getURLParameters\cf0 ];\
    \cf2 //
\f1 \'b6\'cf\'d1\'d4
\f0 \cf0 \
    \cf2 //expression:dic\cf0 \
    \cf10 XCTAssertNotNil\cf0 (dic,\cf4 @"URL
\f1 \'b2\'ce\'ca\'fd\'b2\'bb\'c4\'dc\'ce\'aa\'bf\'d5
\f0 "\cf0 );\
\}\
\
- (\cf6 void\cf0 )testPerformanceExample \{\
    \cf2 // This is an example of a performance test case.\cf0 \
    [\cf6 self\cf0  \cf8 measureBlock\cf0 :^\{\
        \cf2 // Put the code you want to measure the time of here.\cf0 \
        \cf6 int\cf0  j=\cf11 0\cf0 ;\
        \cf6 for\cf0  (\cf6 int\cf0  i = \cf11 0\cf0 ; i<\cf11 100\cf0 ; i++) \{\
            j += i;\
        \}\
    \}];\
\}\
\
\cf6 @end\cf0 \
}